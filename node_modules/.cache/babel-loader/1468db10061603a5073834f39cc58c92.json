{"ast":null,"code":"var _jsxFileName = \"/Users/ivanaradic/Documents/GitHub/P11 Kasa/-IvanaRadicP_11_26012022/kasa/src/components/Carousel/index.jsx\",\n    _s = $RefreshSig$();\n\n// import '../sass/Carousel.scss'\nimport { useRef } from \"react\";\nimport { useCarousel } from \"../../utils/useCarousel\";\nimport PropTypes from \"prop-types\";\n/**\n * Carousel component\n * @param { props: string } id\n * @param { props : string } cover\n * @param { props : array } pictures\n * @returns a slideshow or a unique picture if the counter === 1\n * using hooks useRef with ref attribut for the current picture displayed\n * using personnalized hooks useCarousel for diplaying pictures and navigation (prev/next) with 2 params : current picture and pictures array\n *\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Carousel(_ref) {\n  _s();\n\n  let {\n    id,\n    cover,\n    pictures\n  } = _ref;\n  const currentPicture = useRef(null);\n  const {\n    goToPreviousPicture,\n    gotToNextPicture\n  } = useCarousel(currentPicture, pictures);\n  const counter = pictures.length;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slideWrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slideContainer\",\n      children: counter === 1 ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: cover,\n        alt: \"Carrousel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: goToPreviousPicture,\n          className: \"btn-left\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-angle-left\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: currentPicture,\n          ref: currentPicture,\n          alt: \"\",\n          className: \"slidePicture\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: gotToNextPicture,\n          className: \"btn-right\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-angle-right\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Carousel, \"TMJ8EArnetub6noJzvuaVnx51ds=\", false, function () {\n  return [useCarousel];\n});\n\n_c = Carousel;\nCarousel.propTypes = {\n  id: PropTypes.string.isRequired,\n  cover: PropTypes.string.isRequired,\n  pictures: PropTypes.array.isRequired\n};\nexport default Carousel;\n\nvar _c;\n\n$RefreshReg$(_c, \"Carousel\");","map":{"version":3,"sources":["/Users/ivanaradic/Documents/GitHub/P11 Kasa/-IvanaRadicP_11_26012022/kasa/src/components/Carousel/index.jsx"],"names":["useRef","useCarousel","PropTypes","Carousel","id","cover","pictures","currentPicture","goToPreviousPicture","gotToNextPicture","counter","length","propTypes","string","isRequired","array"],"mappings":";;;AAAA;AACA,SAASA,MAAT,QAAuB,OAAvB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,SAASC,QAAT,OAA2C;AAAA;;AAAA,MAAzB;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,KAAN;AAAaC,IAAAA;AAAb,GAAyB;AACzC,QAAMC,cAAc,GAAGP,MAAM,CAAC,IAAD,CAA7B;AACA,QAAM;AAAEQ,IAAAA,mBAAF;AAAuBC,IAAAA;AAAvB,MAA4CR,WAAW,CAC3DM,cAD2D,EAE3DD,QAF2D,CAA7D;AAIA,QAAMI,OAAO,GAAGJ,QAAQ,CAACK,MAAzB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,gBACGD,OAAO,KAAK,CAAZ,gBACC;AAAK,QAAA,GAAG,EAAEL,KAAV;AAAiB,QAAA,GAAG,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,cADD,gBAGC;AAAA,gCACE;AAAQ,UAAA,OAAO,EAAEG,mBAAjB;AAAsC,UAAA,SAAS,EAAC,UAAhD;AAAA,iCACE;AAAG,YAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AACE,UAAA,GAAG,EAAED,cADP;AAEE,UAAA,GAAG,EAAEA,cAFP;AAGE,UAAA,GAAG,EAAC,EAHN;AAIE,UAAA,SAAS,EAAC;AAJZ;AAAA;AAAA;AAAA;AAAA,gBAJF,eAUE;AAAQ,UAAA,OAAO,EAAEE,gBAAjB;AAAmC,UAAA,SAAS,EAAC,WAA7C;AAAA,iCACE;AAAG,YAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;;GAhCQN,Q;UAE2CF,W;;;KAF3CE,Q;AAkCTA,QAAQ,CAACS,SAAT,GAAqB;AACnBR,EAAAA,EAAE,EAAEF,SAAS,CAACW,MAAV,CAAiBC,UADF;AAEnBT,EAAAA,KAAK,EAAEH,SAAS,CAACW,MAAV,CAAiBC,UAFL;AAGnBR,EAAAA,QAAQ,EAAEJ,SAAS,CAACa,KAAV,CAAgBD;AAHP,CAArB;AAMA,eAAeX,QAAf","sourcesContent":["// import '../sass/Carousel.scss'\nimport { useRef } from \"react\";\nimport { useCarousel } from \"../../utils/useCarousel\";\nimport PropTypes from \"prop-types\";\n\n/**\n * Carousel component\n * @param { props: string } id\n * @param { props : string } cover\n * @param { props : array } pictures\n * @returns a slideshow or a unique picture if the counter === 1\n * using hooks useRef with ref attribut for the current picture displayed\n * using personnalized hooks useCarousel for diplaying pictures and navigation (prev/next) with 2 params : current picture and pictures array\n *\n */\n\nfunction Carousel({ id, cover, pictures }) {\n  const currentPicture = useRef(null);\n  const { goToPreviousPicture, gotToNextPicture } = useCarousel(\n    currentPicture,\n    pictures\n  );\n  const counter = pictures.length;\n\n  return (\n    <div className=\"slideWrapper\">\n      <div className=\"slideContainer\">\n        {counter === 1 ? (\n          <img src={cover} alt=\"Carrousel\" />\n        ) : (\n          <div>\n            <button onClick={goToPreviousPicture} className=\"btn-left\">\n              <i className=\"fas fa-angle-left\"></i>\n            </button>\n            <img\n              src={currentPicture}\n              ref={currentPicture}\n              alt=\"\"\n              className=\"slidePicture\"\n            />\n            <button onClick={gotToNextPicture} className=\"btn-right\">\n              <i className=\"fas fa-angle-right\"></i>\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nCarousel.propTypes = {\n  id: PropTypes.string.isRequired,\n  cover: PropTypes.string.isRequired,\n  pictures: PropTypes.array.isRequired,\n};\n\nexport default Carousel;\n"]},"metadata":{},"sourceType":"module"}