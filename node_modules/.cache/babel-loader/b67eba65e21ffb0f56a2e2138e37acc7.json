{"ast":null,"code":"var _jsxFileName = \"/Users/ivanaradic/Documents/GitHub/P11 Kasa/-IvanaRadicP_11_26012022/kasa/src/utils/hooks/useFetch.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react'; // import './App.css';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction useFetch() {\n  _s();\n\n  const [data, setData] = useState([]);\n\n  const getData = () => {\n    fetch('data.json', {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    }).then(function (response) {\n      console.log(response);\n      return response.json();\n    }).then(function (myJson) {\n      console.log(myJson);\n      setData(myJson);\n    });\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: data && data.length > 0 && data.map(item => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: item.about\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 50\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(useFetch, \"FTfFkLfVdcj0Uk2EahF49AUIgmY=\");\n\nexport default useFetch; // import { useState, useEffect } from \"react\"\n// /**\n//  * useFetch hook\n//  * @param { string } url \n//  * @returns data from json file\n//  */\n// export function useFetch(url) {\n//     const [data, setData] = useState([])  \n//     useEffect(() => {\n//         if (!url) return\n//         const getData = () => {\n//             fetch(url,\n//             { headers : \n//                 {\n//                     'Content-type': 'application/json',\n//                     'Accept' : 'application/json'\n//                 }\n//             })\n//             .then(function(response) {\n//                 if (response.ok) {\n//                     response.json().then( function(myJson) {\n//                         //console.log(myJson)\n//                         console.log('working')\n//                         setData(myJson)\n//                     })\n//                 } else {\n//                     console.log(response.status)\n//                     console.log('notworking')\n//                     const errorMsg = `${response.status} : ${response.statusText}`\n//                     return <div className='error'>{errorMsg}</div>\n//                 }\n//             })\n//         }\n//         getData()\n//     }, [url])\n//     return { data }\n// }","map":{"version":3,"sources":["/Users/ivanaradic/Documents/GitHub/P11 Kasa/-IvanaRadicP_11_26012022/kasa/src/utils/hooks/useFetch.jsx"],"names":["React","useState","useEffect","useFetch","data","setData","getData","fetch","headers","then","response","console","log","json","myJson","length","map","item","about"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC,C,CACA;;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAeJ,QAAQ,CAAC,EAAD,CAA7B;;AACA,QAAMK,OAAO,GAAC,MAAI;AAChBC,IAAAA,KAAK,CAAC,WAAD,EACJ;AACCC,MAAAA,OAAO,EAAG;AACR,wBAAgB,kBADR;AAER,kBAAU;AAFF;AADX,KADI,CAAL,CAQGC,IARH,CAQQ,UAASC,QAAT,EAAkB;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,aAAOA,QAAQ,CAACG,IAAT,EAAP;AACD,KAXH,EAYGJ,IAZH,CAYQ,UAASK,MAAT,EAAiB;AACrBH,MAAAA,OAAO,CAACC,GAAR,CAAYE,MAAZ;AACAT,MAAAA,OAAO,CAACS,MAAD,CAAP;AACD,KAfH;AAgBD,GAjBD;;AAkBAZ,EAAAA,SAAS,CAAC,MAAI;AACZI,IAAAA,OAAO;AACR,GAFQ,EAEP,EAFO,CAAT;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cAEGF,IAAI,IAAIA,IAAI,CAACW,MAAL,GAAY,CAApB,IAAyBX,IAAI,CAACY,GAAL,CAAUC,IAAD,iBAAQ;AAAA,gBAAIA,IAAI,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA,YAAjB;AAF5B;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GA9BQf,Q;;AAgCT,eAAeA,QAAf,C,CAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA","sourcesContent":["import React,{useState,useEffect} from 'react';\n// import './App.css';\n\nfunction useFetch() {\n  const [data,setData]=useState([]);\n  const getData=()=>{\n    fetch('data.json'\n    ,{\n      headers : { \n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n       }\n    }\n    )\n      .then(function(response){\n        console.log(response)\n        return response.json();\n      })\n      .then(function(myJson) {\n        console.log(myJson);\n        setData(myJson)\n      });\n  }\n  useEffect(()=>{\n    getData()\n  },[])\n  return (\n    <div className=\"App\">\n     {\n       data && data.length>0 && data.map((item)=><p>{item.about}</p>)\n     }\n    </div>\n  );\n}\n\nexport default useFetch;\n\n\n// import { useState, useEffect } from \"react\"\n\n// /**\n//  * useFetch hook\n//  * @param { string } url \n//  * @returns data from json file\n//  */\n\n// export function useFetch(url) {\n\n//     const [data, setData] = useState([])  \n\n//     useEffect(() => {\n\n//         if (!url) return\n\n//         const getData = () => {\n//             fetch(url,\n//             { headers : \n//                 {\n//                     'Content-type': 'application/json',\n//                     'Accept' : 'application/json'\n//                 }\n//             })\n//             .then(function(response) {\n//                 if (response.ok) {\n//                     response.json().then( function(myJson) {\n//                         //console.log(myJson)\n//                         console.log('working')\n//                         setData(myJson)\n//                     })\n//                 } else {\n//                     console.log(response.status)\n//                     console.log('notworking')\n//                     const errorMsg = `${response.status} : ${response.statusText}`\n//                     return <div className='error'>{errorMsg}</div>\n//                 }\n//             })\n//         }\n//         getData()\n//     }, [url])\n\n//     return { data }\n// }"]},"metadata":{},"sourceType":"module"}