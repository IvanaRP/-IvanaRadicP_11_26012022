{"ast":null,"code":"var _jsxFileName = \"/Users/ivanaradic/Documents/GitHub/P11 Kasa/-IvanaRadicP_11_26012022/kasa/src/utils/hooks/useFetch.jsx\";\nimport React from \"react\"; // import './App.css';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  // Constructor\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      DataisLoaded: false\n    };\n  } // ComponentDidMount is used to\n  // execute the code\n\n\n  componentDidMount() {\n    fetch(\"../datas/logements.json\").then(res => res.json()).then(json => {\n      this.setState({\n        items: json,\n        DataisLoaded: true\n      });\n    });\n  }\n\n  render() {\n    const {\n      DataisLoaded,\n      items\n    } = this.state;\n    if (!DataisLoaded) return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Pleses wait some time.... \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 4\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 29\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Fetch data from an api in react \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 4\n      }, this), \" \", items.map(item => /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: [\"User_Name: \", item.username, \", Full_Name: \", item.name, \", User_Email: \", item.email]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 3\n    }, this);\n  }\n\n}\n\nexport default App; // import { useState, useEffect } from \"react\"\n// /**\n//  * useFetch hook\n//  * @param { string } url \n//  * @returns data from json file\n//  */\n// export function useFetch(url) {\n//     const [data, setData] = useState([])  \n//     useEffect(() => {\n//         if (!url) return\n//         const getData = () => {\n//             fetch(url,\n//             { headers : \n//                 {\n//                     'Content-type': 'application/json',\n//                     'Accept' : 'application/json'\n//                 }\n//             })\n//             .then(function(response) {\n//                 if (response.ok) {\n//                     response.json().then( function(myJson) {\n//                         console.log(myJson)\n//                         setData(myJson)\n//                     })\n//                 } else {\n//                     console.log(response.status)\n//                     const errorMsg = `${response.status} : ${response.statusText}`\n//                     return <div className='error'>{errorMsg}</div>\n//                 }\n//             })\n//         }\n//         getData()\n//     }, [url])\n//     return { data }\n// }","map":{"version":3,"sources":["/Users/ivanaradic/Documents/GitHub/P11 Kasa/-IvanaRadicP_11_26012022/kasa/src/utils/hooks/useFetch.jsx"],"names":["React","App","Component","constructor","props","state","items","DataisLoaded","componentDidMount","fetch","then","res","json","setState","render","map","item","username","name","email","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;;;AACA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAEjC;AACAC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACZC,MAAAA,KAAK,EAAE,EADK;AAEZC,MAAAA,YAAY,EAAE;AAFF,KAAb;AAIA,GAVgC,CAYjC;AACA;;;AACAC,EAAAA,iBAAiB,GAAG;AACnBC,IAAAA,KAAK,CACP,yBADO,CAAL,CAEEC,IAFF,CAEQC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAFhB,EAGEF,IAHF,CAGQE,IAAD,IAAU;AACf,WAAKC,QAAL,CAAc;AACbP,QAAAA,KAAK,EAAEM,IADM;AAEbL,QAAAA,YAAY,EAAE;AAFD,OAAd;AAIA,KARF;AASA;;AACDO,EAAAA,MAAM,GAAG;AACR,UAAM;AAAEP,MAAAA,YAAF;AAAgBD,MAAAA;AAAhB,QAA0B,KAAKD,KAArC;AACA,QAAI,CAACE,YAAL,EAAmB,oBAAO;AAAA,8BACzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADyB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAGnB,wBACA;AAAK,MAAA,SAAS,EAAG,KAAjB;AAAA,8BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,OAEED,KAAK,CAACS,GAAN,CAAWC,IAAD,iBACV;AAAA,kCACcA,IAAI,CAACC,QADnB,mBAEcD,IAAI,CAACE,IAFnB,oBAGeF,IAAI,CAACG,KAHpB;AAAA,SAAYH,IAAI,CAACI,EAAjB;AAAA;AAAA;AAAA;AAAA,cADA,CAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAaD;;AA3CiC;;AA8ClC,eAAenB,GAAf,C,CAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA","sourcesContent":["import React from \"react\";\n// import './App.css';\nclass App extends React.Component {\n\n\t// Constructor\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\titems: [],\n\t\t\tDataisLoaded: false\n\t\t};\n\t}\n\n\t// ComponentDidMount is used to\n\t// execute the code\n\tcomponentDidMount() {\n\t\tfetch(\n\"../datas/logements.json\")\n\t\t\t.then((res) => res.json())\n\t\t\t.then((json) => {\n\t\t\t\tthis.setState({\n\t\t\t\t\titems: json,\n\t\t\t\t\tDataisLoaded: true\n\t\t\t\t});\n\t\t\t})\n\t}\n\trender() {\n\t\tconst { DataisLoaded, items } = this.state;\n\t\tif (!DataisLoaded) return <div>\n\t\t\t<h1> Pleses wait some time.... </h1> </div> ;\n\n\t\treturn (\n\t\t<div className = \"App\">\n\t\t\t<h1> Fetch data from an api in react </h1> {\n\t\t\t\titems.map((item) => (\n\t\t\t\t<ol key = { item.id } >\n\t\t\t\t\tUser_Name: { item.username },\n\t\t\t\t\tFull_Name: { item.name },\n\t\t\t\t\tUser_Email: { item.email }\n\t\t\t\t\t</ol>\n\t\t\t\t))\n\t\t\t}\n\t\t</div>\n\t);\n}\n}\n\nexport default App;\n\n\n// import { useState, useEffect } from \"react\"\n\n// /**\n//  * useFetch hook\n//  * @param { string } url \n//  * @returns data from json file\n//  */\n\n// export function useFetch(url) {\n\n//     const [data, setData] = useState([])  \n\n//     useEffect(() => {\n\n//         if (!url) return\n\n//         const getData = () => {\n//             fetch(url,\n//             { headers : \n//                 {\n//                     'Content-type': 'application/json',\n//                     'Accept' : 'application/json'\n//                 }\n//             })\n//             .then(function(response) {\n//                 if (response.ok) {\n//                     response.json().then( function(myJson) {\n//                         console.log(myJson)\n//                         setData(myJson)\n//                     })\n//                 } else {\n//                     console.log(response.status)\n//                     const errorMsg = `${response.status} : ${response.statusText}`\n//                     return <div className='error'>{errorMsg}</div>\n//                 }\n//             })\n//         }\n//         getData()\n//     }, [url])\n\n//     return { data }\n// }"]},"metadata":{},"sourceType":"module"}