{"ast":null,"code":"var _jsxFileName = \"/Users/ivanaradic/Documents/GitHub/P11 Kasa/-IvanaRadicP_11_26012022/kasa/src/components/Carousel/index.jsx\",\n    _s = $RefreshSig$();\n\nimport '../sass/Carousel.scss';\nimport { useRef } from 'react';\nimport { useCerousel } from '../../utils/hooks/useCarousel';\nimport PropTypes from 'prop-types';\n/**\n * Carousel component\n * @param { props: string } id\n * @param { props : string } cover\n * @param { orops : array } pictures\n * @returns a slideshow or a unique picture if the counter === 1\n * using hooks useRef with ref attribut for the current picture displayed\n * using personnalized hooks useCarousel for diplaying pictures and navigation (prev/next) with 2 params : current picture and pictures array\n * \n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Carousel(_ref) {\n  _s();\n\n  let {\n    id,\n    cover,\n    pictures\n  } = _ref;\n  const currentPicture = useRef(null);\n  const {\n    goToPreviousPicture,\n    gotToNextPicture\n  } = useCerousel(currentPicture, pictures);\n  const counter = pictures.length;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slideWrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slideContainer\",\n      children: counter === 1 ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: cover,\n        alt: \"Carrousel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: goToPreviousPicture,\n          className: \"btn-left\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-angle-left\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 84\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: currentPicture,\n          ref: currentPicture,\n          alt: \"\",\n          className: \"slidePicture\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: gotToNextPicture,\n          className: \"btn-right\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-angle-right\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 82\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Carousel, \"llFII5yR3AyipShkobauqwgra/g=\", false, function () {\n  return [useCerousel];\n});\n\n_c = Carousel;\nCarousel.propTypes = {\n  id: PropTypes.string.isRequired,\n  cover: PropTypes.string.isRequired,\n  pictures: PropTypes.array.isRequired\n};\nexport default Carousel;\n\nvar _c;\n\n$RefreshReg$(_c, \"Carousel\");","map":{"version":3,"sources":["/Users/ivanaradic/Documents/GitHub/P11 Kasa/-IvanaRadicP_11_26012022/kasa/src/components/Carousel/index.jsx"],"names":["useRef","useCerousel","PropTypes","Carousel","id","cover","pictures","currentPicture","goToPreviousPicture","gotToNextPicture","counter","length","propTypes","string","isRequired","array"],"mappings":";;;AAAA,OAAO,uBAAP;AACA,SAASA,MAAT,QAAuB,OAAvB;AACA,SAASC,WAAT,QAA4B,+BAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,SAASC,QAAT,OAAyC;AAAA;;AAAA,MAAvB;AAACC,IAAAA,EAAD;AAAKC,IAAAA,KAAL;AAAYC,IAAAA;AAAZ,GAAuB;AACrC,QAAMC,cAAc,GAAGP,MAAM,CAAC,IAAD,CAA7B;AACA,QAAM;AAAEQ,IAAAA,mBAAF;AAAuBC,IAAAA;AAAvB,MAA4CR,WAAW,CAACM,cAAD,EAAiBD,QAAjB,CAA7D;AACA,QAAMI,OAAO,GAAGJ,QAAQ,CAACK,MAAzB;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,gBACKD,OAAO,KAAK,CAAZ,gBACG;AAAK,QAAA,GAAG,EAAEL,KAAV;AAAiB,QAAA,GAAG,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,cADH,gBAGG;AAAA,gCACI;AAAQ,UAAA,OAAO,EAAEG,mBAAjB;AAAsC,UAAA,SAAS,EAAC,UAAhD;AAAA,iCAA2D;AAAG,YAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAA3D;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,GAAG,EAAED,cAAV;AAA0B,UAAA,GAAG,EAAEA,cAA/B;AAA+C,UAAA,GAAG,EAAC,EAAnD;AAAsD,UAAA,SAAS,EAAC;AAAhE;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAQ,UAAA,OAAO,EAAEE,gBAAjB;AAAmC,UAAA,SAAS,EAAC,WAA7C;AAAA,iCAAyD;AAAG,YAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAAzD;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAJR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GApBQN,Q;UAE6CF,W;;;KAF7CE,Q;AAsBTA,QAAQ,CAACS,SAAT,GAAqB;AACjBR,EAAAA,EAAE,EAAEF,SAAS,CAACW,MAAV,CAAiBC,UADJ;AAEjBT,EAAAA,KAAK,EAAEH,SAAS,CAACW,MAAV,CAAiBC,UAFP;AAGjBR,EAAAA,QAAQ,EAAEJ,SAAS,CAACa,KAAV,CAAgBD;AAHT,CAArB;AAMA,eAAeX,QAAf","sourcesContent":["import '../sass/Carousel.scss'\nimport { useRef } from 'react'\nimport { useCerousel } from '../../utils/hooks/useCarousel'\nimport PropTypes from 'prop-types'\n\n/**\n * Carousel component\n * @param { props: string } id\n * @param { props : string } cover\n * @param { orops : array } pictures\n * @returns a slideshow or a unique picture if the counter === 1\n * using hooks useRef with ref attribut for the current picture displayed\n * using personnalized hooks useCarousel for diplaying pictures and navigation (prev/next) with 2 params : current picture and pictures array\n * \n */\n\nfunction Carousel({id, cover, pictures}) {\n    const currentPicture = useRef(null)\n    const { goToPreviousPicture, gotToNextPicture } = useCerousel(currentPicture, pictures)\n    const counter = pictures.length\n    \n    return (\n        <div className=\"slideWrapper\">\n            <div className=\"slideContainer\">  \n                {counter === 1 ? (\n                    <img src={cover} alt=\"Carrousel\" />\n                ) : ( \n                    <div>\n                        <button onClick={goToPreviousPicture} className=\"btn-left\"><i className=\"fas fa-angle-left\"></i></button>\n                        <img src={currentPicture} ref={currentPicture} alt=\"\" className=\"slidePicture\"/>\n                        <button onClick={gotToNextPicture} className=\"btn-right\"><i className=\"fas fa-angle-right\"></i></button>\n                    </div>\n                )}              \n            </div>        \n        </div>\n    )\n}\n\nCarousel.propTypes = {\n    id: PropTypes.string.isRequired,\n    cover: PropTypes.string.isRequired,\n    pictures: PropTypes.array.isRequired\n}\n\nexport default Carousel"]},"metadata":{},"sourceType":"module"}