{"ast":null,"code":"var _jsxFileName = \"/Users/ivanaradic/Documents/GitHub/P11 Kasa/-IvanaRadicP_11_26012022/kasa/src/utils/hooks/useFetch.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n/**\n * useFetch hook\n * @param { string } url \n * @returns data from json file\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function useFetch(url) {\n  _s();\n\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    if (!url) return;\n\n    const getData = () => {\n      fetch(url, {\n        headers: {\n          'Content-type': 'application/json',\n          'Accept': 'application/json'\n        }\n      }).then(function (response) {\n        if (response.ok) {\n          response.json().then(function (myJson) {\n            console.log(myJson);\n            setData(myJson);\n          });\n        } else {\n          console.log(response.status);\n          const errorMsg = `${response.status} : ${response.statusText}`;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error\",\n            children: errorMsg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 28\n          }, this);\n        }\n      });\n    };\n\n    getData();\n  }, [url]);\n  return {\n    data\n  };\n}\n\n_s(useFetch, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");","map":{"version":3,"sources":["/Users/ivanaradic/Documents/GitHub/P11 Kasa/-IvanaRadicP_11_26012022/kasa/src/utils/hooks/useFetch.jsx"],"names":["useState","useEffect","useFetch","url","data","setData","getData","fetch","headers","then","response","ok","json","myJson","console","log","status","errorMsg","statusText"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;AAAA;;AAE1B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AAEZ,QAAI,CAACE,GAAL,EAAU;;AAEV,UAAMG,OAAO,GAAG,MAAM;AAClBC,MAAAA,KAAK,CAACJ,GAAD,EACL;AAAEK,QAAAA,OAAO,EACL;AACI,0BAAgB,kBADpB;AAEI,oBAAW;AAFf;AADJ,OADK,CAAL,CAOCC,IAPD,CAOM,UAASC,QAAT,EAAmB;AACrB,YAAIA,QAAQ,CAACC,EAAb,EAAiB;AACbD,UAAAA,QAAQ,CAACE,IAAT,GAAgBH,IAAhB,CAAsB,UAASI,MAAT,EAAiB;AACnCC,YAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAR,YAAAA,OAAO,CAACQ,MAAD,CAAP;AACH,WAHD;AAIH,SALD,MAKO;AACHC,UAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACM,MAArB;AACA,gBAAMC,QAAQ,GAAI,GAAEP,QAAQ,CAACM,MAAO,MAAKN,QAAQ,CAACQ,UAAW,EAA7D;AACA,8BAAO;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA,sBAAwBD;AAAxB;AAAA;AAAA;AAAA;AAAA,kBAAP;AACH;AACJ,OAlBD;AAmBH,KApBD;;AAqBAX,IAAAA,OAAO;AACV,GA1BQ,EA0BN,CAACH,GAAD,CA1BM,CAAT;AA4BA,SAAO;AAAEC,IAAAA;AAAF,GAAP;AACH;;GAjCeF,Q","sourcesContent":["import { useState, useEffect } from \"react\"\n\n/**\n * useFetch hook\n * @param { string } url \n * @returns data from json file\n */\n\nexport function useFetch(url) {\n\n    const [data, setData] = useState([])  \n\n    useEffect(() => {\n\n        if (!url) return\n\n        const getData = () => {\n            fetch(url,\n            { headers : \n                {\n                    'Content-type': 'application/json',\n                    'Accept' : 'application/json'\n                }\n            })\n            .then(function(response) {\n                if (response.ok) {\n                    response.json().then( function(myJson) {\n                        console.log(myJson)\n                        setData(myJson)\n                    })\n                } else {\n                    console.log(response.status)\n                    const errorMsg = `${response.status} : ${response.statusText}`\n                    return <div className='error'>{errorMsg}</div>\n                }\n            })\n        }\n        getData()\n    }, [url])\n\n    return { data }\n}"]},"metadata":{},"sourceType":"module"}